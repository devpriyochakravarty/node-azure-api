name: Node.js CI, Build, and Push to ACR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-and-publish-image:
    runs-on: ubuntu-latest
    
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        env:
          JWT_SECRET: a-very-secret-key-for-ci
          NODE_ENV: test
      
      # Optional: Keep azure/login@v1 if you plan to run other 'az' cli commands later in the workflow.
      # If its ONLY purpose was to help docker login, and the manual docker login works,
      # you might not even need this azure/login@v1 step. For now, let's keep it.
      - name: Azure Login (for general Azure CLI context, if needed later)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # REMOVE or COMMENT OUT the problematic azure/docker-login@v2 step:
      # - name: Log in to Azure Container Registry 
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   uses: azure/docker-login@v2
      #   with:
      #     login-server: ${{ secrets.ACR_LOGIN_SERVER }}

      # USE THIS EXPLICIT DOCKER LOGIN INSTEAD:
      - name: Docker Login to ACR using Service Principal
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientId)
          CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientSecret)
          echo "$CLIENT_SECRET" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u "$CLIENT_ID" --password-stdin
          echo "Docker login to ACR successful"
      
      - name: Build and tag Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/node-azure-api:${{ github.sha }} -t ${{ secrets.ACR_LOGIN_SERVER }}/node-azure-api:latest .
          echo "Image tagged with SHA: ${{ secrets.ACR_LOGIN_SERVER }}/node-azure-api:${{ github.sha }}"
          echo "Image tagged with latest: ${{ secrets.ACR_LOGIN_SERVER }}/node-azure-api:latest"
      
      - name: Push Docker image to ACR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/node-azure-api:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/node-azure-api:latest