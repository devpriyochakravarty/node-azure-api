name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        # Health check to wait for MongoDB to be ready
        # The mongosh command might need adjustment if the mongo:latest image doesn't have it immediately
        # A simpler check might be needed if this fails, e.g., checking if the port is open.
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x, 20.x] # Using LTS versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          DB_URI: mongodb://mongo:27017/recipeHubDb_test_ci # Connect to the service container
          JWT_SECRET: a-very-secure-secret-for-ci-tests # Provide a JWT secret for tests
          NODE_ENV: test # Explicitly set NODE_ENV to test
          PORT: 3001 # Optional: Run tests on a different port in CI if needed