name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo: # Service name, becomes hostname 'mongo' for other containers in this job
        image: mongo:latest
        ports: # Exposes port on the runner's host network, useful for direct access if needed
          - 27017:27017
        options: >- # Healthcheck to wait for MongoDB to be ready
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\").ok' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x] # Let's simplify to ONE Node version for faster debugging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test # This will execute the script from package.json
        env:
          # This DB_URI is used by server.js when running in CI
          DB_URI: mongodb://mongo:27017/recipeHubDb_test_ci
          JWT_SECRET: a-very-secret-ci-jwt-secret # Provide a dummy secret for CI tests
          NODE_ENV: test # Explicitly set NODE_ENV to test
          # PORT: 3000 # Optional, if your tests or app specifically need it